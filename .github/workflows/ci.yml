name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings

  tag-version:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.HAWKY_APP_ID }}
          private_key: ${{ secrets.HAWKY_APP_PRIVATE_KEY }}
      - name: Test token permissions
        run: |
          curl -v -H "Authorization: token ${{ steps.generate_token.outputs.token }}" \
            https://api.github.com/repos/stackhawk/stackhawk-mcp
        shell: bash
      - name: Set up git for pushing
        run: |
          git remote set-url origin https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/${{ github.repository }}.git
      - name: Log git remote and user
        run: |
          git remote -v
          git config --get user.name || echo "No user.name set"
          git config --get user.email || echo "No user.email set"
          git config --list
      - name: Set git user for HawkyMcBuilderFace bot
        run: |
          git config user.name "HawkyMcBuilderFace[bot]"
          git config user.email "222944+HawkyMcBuilderFace[bot]@users.noreply.github.com"
      - name: Log git user after config
        run: |
          git config --get user.name
          git config --get user.email
      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | head -1 | cut -d '"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Log generated GitHub App token (for debugging)
        run: |
          echo "Generated GitHub App token:"
          echo "${{ steps.generate_token.outputs.token }}" | sed 's/./& /g' | head -c 100
        shell: bash
      - name: Create and push tag for current version (with verbose logging)
        run: |
          git tag v${{ steps.get_version.outputs.version }}
          git fetch origin --tags --verbose
          GIT_TRACE_PACKET=1 GIT_TRACE=1 GIT_CURL_VERBOSE=1 git push origin v${{ steps.get_version.outputs.version }}

  bump-version:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test, tag-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate GitHub App token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.HAWKY_APP_ID }}
          private_key: ${{ secrets.HAWKY_APP_PRIVATE_KEY }}
      - name: Set up git for pushing
        run: |
          git remote set-url origin https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/${{ github.repository }}.git
      - name: Set git user for HawkyMcBuilderFace bot
        run: |
          git config user.name "HawkyMcBuilderFace[bot]"
          git config user.email "222944+HawkyMcBuilderFace[bot]@users.noreply.github.com"
      - name: Bump patch version with bumpver
        run: bumpver update --patch --commit
      - name: Push version bump commit
        run: |
          git push 