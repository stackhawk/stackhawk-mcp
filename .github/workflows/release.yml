name: Release

on:
  release:
    types: [published]

permissions:
  contents: write
  id-token: write

jobs:
  approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    steps:
      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GH_TOKEN }}
          issue-title: "Release Approval for ${{ github.ref_name }}"
          issue-body: "Please approve this release to publish to PyPI and Docker."
          approvers: sgerlach,kcberg,danielhopkins,clamey,Bwvolleyball
          minimum-approvals: 1
          mode: issue
          fail-on-denial: true

  tag:
    name: Confirm Tag Exists
    runs-on: ubuntu-latest
    needs: approval
    steps:
      - name: Test GH_TOKEN permissions
        run: |
          curl -v -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}
        shell: bash
      - name: Confirm release tag exists
        run: |
          echo "Release tag is ${{ github.ref }}"

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    environment: pypi
    needs: tag
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build bumpver
      - name: Set up git for pushing
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git
      - name: Set git user for deploy
        run: |
          git config user.name "${{ secrets.GH_DEPLOY_USER }}"
          git config user.email "${{ secrets.GH_DEPLOY_EMAIL }}"
      - name: Build package
        run: |
          python -m build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # No password needed! Uses OIDC trusted publisher

  publish-docker:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Test GH_TOKEN permissions
        run: |
          curl -v -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}
        shell: bash
      - name: Set up git for pushing
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: stackhawk/stackhawk-mcp:latest,stackhawk/stackhawk-mcp:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64 